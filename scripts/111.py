import os
import subprocess
import json
from b2sdk.v2 import B2Api, InMemoryAccountInfo

# üîÑ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ B2
info = InMemoryAccountInfo()
b2_api = B2Api(info)

S3_KEY_ID = os.getenv("S3_KEY_ID")
S3_APPLICATION_KEY = os.getenv("S3_APPLICATION_KEY")
S3_BUCKET_NAME = os.getenv("S3_BUCKET_NAME")
GH_TOKEN = os.getenv("GH_TOKEN")

RUNNING_IN_GITHUB = os.getenv("GITHUB_ACTIONS") == "true"

# –í—ã–≤–æ–¥–∏–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
print(f"‚úÖ GH_TOKEN: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if GH_TOKEN else '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
print(f"‚úÖ S3_KEY_ID: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if S3_KEY_ID else '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
print(f"‚úÖ S3_APPLICATION_KEY: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if S3_APPLICATION_KEY else '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
print(f"‚úÖ S3_BUCKET_NAME: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if S3_BUCKET_NAME else '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")

if RUNNING_IN_GITHUB and not GH_TOKEN:
    raise RuntimeError("‚ùå GH_TOKEN –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ GitHub Actions!")

# –ü–µ—Ä–µ–¥–∞—ë–º GH_TOKEN –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ GitHub CLI
if GH_TOKEN:
    os.environ["GH_TOKEN"] = GH_TOKEN
    print("‚úÖ GH_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

if not S3_KEY_ID or not S3_APPLICATION_KEY or not S3_BUCKET_NAME:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è S3_KEY_ID, S3_APPLICATION_KEY –∏–ª–∏ S3_BUCKET_NAME –Ω–µ –∑–∞–¥–∞–Ω—ã!")

try:
    b2_api.authorize_account("production", S3_KEY_ID, S3_APPLICATION_KEY)
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ B2 —É—Å–ø–µ—à–Ω–∞!")
except Exception as e:
    raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ B2: {e}")

# üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ bucket'–∞
try:
    bucket = b2_api.get_bucket_by_name(S3_BUCKET_NAME)
except Exception as e:
    raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ bucket'–∞ {S3_BUCKET_NAME}: {e}")

BASE_DIR = os.path.dirname(os.path.dirname(__file__))
DOWNLOAD_DIR = os.path.join(BASE_DIR, "data", "downloaded")

if not os.path.exists(DOWNLOAD_DIR):
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)


def clear_old_files():
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã."""
    print(f"üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ {DOWNLOAD_DIR}...")
    for file in os.listdir(DOWNLOAD_DIR):
        if file in [".gitkeep", ".DS_Store"]:
            continue
        file_path = os.path.join(DOWNLOAD_DIR, file)
        os.remove(file_path)
    print("‚úÖ –ü–∞–ø–∫–∞ –æ—á–∏—â–µ–Ω–∞.")


def check_artifacts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –≤ GitHub Actions."""
    print("üì• –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã...")
    result = subprocess.run(["gh", "api", "repos/Boyarinn1/a1/actions/artifacts"], capture_output=True, text=True)

    try:
        artifacts = json.loads(result.stdout)
        if artifacts.get("total_count", 0) == 0:
            print("‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤.")
            return False
    except json.JSONDecodeError:
        print("‚ùå –û—à–∏–±–∫–∞: API –≤–µ—Ä–Ω—É–ª –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON!")
        return False

    return True


def restore_files_from_artifacts():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∞–π–ª—ã –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å."""
    print("üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤...")
    artifact_name = "downloaded_files"

    result = subprocess.run(["gh", "api", "repos/Boyarinn1/a1/actions/artifacts"], capture_output=True, text=True)

    if artifact_name in result.stdout:
        print(f"‚úÖ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç {artifact_name} –Ω–∞–π–¥–µ–Ω. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã...")
        os.makedirs(DOWNLOAD_DIR, exist_ok=True)
        subprocess.run(["gh", "run", "download", "--name", artifact_name, "--dir", DOWNLOAD_DIR], check=False)
    else:
        print(f"‚ö†Ô∏è –ê—Ä—Ç–µ—Ñ–∞–∫—Ç {artifact_name} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.")


def download_new_files():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–æ–≤—É—é –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É —Ñ–∞–π–ª–æ–≤ –∏–∑ B2."""
    print("üì• –ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ B2...")
    json_file = None
    mp4_file = None

    for file_version, _ in bucket.ls("444/", recursive=True):
        file_name = file_version.file_name
        if file_name.endswith(".json"):
            json_file = file_name
            mp4_file = file_name.replace(".json", ".mp4")
            break

    if not json_file or not mp4_file:
        print("‚ö†Ô∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏!")
        return

    print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º {json_file} –∏ {mp4_file}...")
    for file_name in [json_file, mp4_file]:
        local_path = os.path.join(DOWNLOAD_DIR, os.path.basename(file_name))
        try:
            with open(local_path, "wb") as f:
                bucket.download_file_by_name(file_name).save(f)
            print(f"‚úÖ {file_name} –∑–∞–≥—Ä—É–∂–µ–Ω –≤ {local_path}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {file_name}: {e}")


if __name__ == "__main__":
    clear_old_files()
    if check_artifacts():
        restore_files_from_artifacts()
    download_new_files()
