import os
import json
import b2sdk.v2
import asyncio
from telegram import Bot
from telegram.error import TelegramError

# üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
BASE_DIR = os.path.dirname(os.path.dirname(__file__))  # a1/
DOWNLOAD_DIR = os.path.join(BASE_DIR, "data", "downloaded")  # a1/data/downloaded
CONFIG_PATH = os.path.join(BASE_DIR, "config", "config_public.json")  # a1/config/config_public.json

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
S3_KEY_ID = os.getenv("S3_KEY_ID")
S3_APPLICATION_KEY = os.getenv("S3_APPLICATION_KEY")
S3_BUCKET_NAME = os.getenv("S3_BUCKET_NAME")
S3_ENDPOINT = os.getenv("S3_ENDPOINT", "production")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not all([S3_KEY_ID, S3_APPLICATION_KEY, S3_BUCKET_NAME, TELEGRAM_TOKEN, TELEGRAM_CHAT_ID]):
    raise RuntimeError("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

# üîπ Telegram Bot
bot = Bot(token=TELEGRAM_TOKEN)

# üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ B2
info = b2sdk.v2.InMemoryAccountInfo()
b2_api = b2sdk.v2.B2Api(info)
b2_api.authorize_account(S3_ENDPOINT, S3_KEY_ID, S3_APPLICATION_KEY)

# üîπ –ü–æ–ª—É—á–∞–µ–º bucket
bucket = b2_api.get_bucket_by_name(S3_BUCKET_NAME)


async def process_files():
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ JSON-—Ñ–∞–π–ª–æ–≤ –≤ Telegram"""
    files_to_download = []
    print("üì• –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –≤ B2 (–ø–∞–ø–∫–∞ 444/)...")
    for file_version, _ in bucket.ls("444/", recursive=True):
        if file_version.file_name.endswith(".json"):  # –ò—â–µ–º —Ç–æ–ª—å–∫–æ JSON-—Ñ–∞–π–ª—ã
            files_to_download.append(file_version.file_name)

    if not files_to_download:
        print("‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏. –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        with open(CONFIG_PATH, "w", encoding="utf-8") as f:
            json.dump({"status": "waiting", "files": []}, f, indent=4)
        return

    # üîπ –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)

    for file_name in files_to_download:
        local_path = os.path.join(DOWNLOAD_DIR, os.path.basename(file_name))
        try:
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            print(f"üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ {file_name} –≤ {local_path}...")
            bucket.download_file_by_name(file_name).save_to(local_path)

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º JSON-—Ñ–∞–π–ª
            with open(local_path, "r", encoding="utf-8") as f:
                data = f.read()  # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ —Å—Ç—Ä–æ–∫—É

            # üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ data - —Å—Ç—Ä–æ–∫–∞, –ø–∞—Ä—Å–∏–º JSON
            try:
                data = json.loads(data)
            except json.JSONDecodeError:
                print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª {file_name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º JSON.")
                continue

            # üîπ –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            topic = data.get("topic", {}).get("topic", "–ë–µ–∑ —Ç–µ–º—ã")
            text_content = data.get("text_initial", {}).get("content", "–ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
            critique = data.get("critique", {}).get("critique", "")
            sarcasm = data.get("sarcasm", {}).get("comment", "")
            poll = data.get("sarcasm", {}).get("poll", "")

            # üîπ –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —à–∞–±–ª–æ–Ω—É
            message = f"**{topic}**\n\n{text_content}"

            if critique:
                message += f"\n\nüí° **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–æ—Ä**\n{critique}"

            if sarcasm:
                message += f"\n\nüì¢ **–°–∞—Ä–∫–∞–∑–º**\n{sarcasm}"

            if poll:
                message += f"\n\nüìä **–û–ø—Ä–æ—Å**\n{poll}"

            # üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
            try:
                await bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message, parse_mode="Markdown")
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {file_name}")
            except TelegramError as e:
                print(f"üö® –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

            os.remove(local_path)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        except Exception as e:
            print(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {file_name}: {e}")

    print("üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.")


# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
if __name__ == "__main__":
    asyncio.run(process_files())
