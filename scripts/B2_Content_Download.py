#!/usr/bin/env python3
import os
import json
import asyncio
import shutil
import re
from typing import Set, List, Tuple
# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è Telegram API
from telegram import Bot, InputMediaPhoto, InputMediaVideo
# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è B2 SDK –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
import b2sdk.v2
from b2sdk.v2.exception import FileNotPresent, B2Error

# ------------------------------------------------------------
# 1) –°—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# ------------------------------------------------------------
S3_KEY_ID = os.getenv("S3_KEY_ID")
S3_APPLICATION_KEY = os.getenv("S3_APPLICATION_KEY")
S3_BUCKET_NAME = os.getenv("S3_BUCKET_NAME")
S3_ENDPOINT = os.getenv("S3_ENDPOINT", "production") # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'production', –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not all([
    S3_KEY_ID,
    S3_APPLICATION_KEY,
    S3_BUCKET_NAME,
    TELEGRAM_TOKEN,
    TELEGRAM_CHAT_ID
]):
    # –ï—Å–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É
    raise RuntimeError("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
else:
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

# ------------------------------------------------------------
# 2) –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç–∏, –æ–±—ä–µ–∫—Ç Telegram-–±–æ—Ç–∞ –∏ B2 SDK
# ------------------------------------------------------------
BASE_DIR = os.path.dirname(__file__) # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–∫—Ä–∏–ø—Ç
DOWNLOAD_DIR = os.path.join(BASE_DIR, "downloaded") # –ü–∞–ø–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
PROCESSED_DIR = os.path.join(DOWNLOAD_DIR, "processed") # –ü–∞–ø–∫–∞ –¥–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
ERROR_DIR = os.path.join(DOWNLOAD_DIR, "errors") # –ü–∞–ø–∫–∞ –¥–ª—è —Ñ–∞–π–ª–æ–≤ —Å –æ—à–∏–±–∫–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∏—Ç—ã–π JSON)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
try:
    bot = Bot(token=TELEGRAM_TOKEN)
    print("‚úÖ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
except Exception as e:
    raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞: {e}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è B2 API
try:
    print("‚öôÔ∏è –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Backblaze B2...")
    info = b2sdk.v2.InMemoryAccountInfo()
    b2_api = b2sdk.v2.B2Api(info)
    b2_api.authorize_account(S3_ENDPOINT, S3_KEY_ID, S3_APPLICATION_KEY)
    bucket = b2_api.get_bucket_by_name(S3_BUCKET_NAME)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ B2 –±–∞–∫–µ—Ç—É: {S3_BUCKET_NAME}")
except Exception as e:
    raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ B2: {e}")

# ------------------------------------------------------------
# –†–∞–±–æ—Ç–∞ —Å config_public.json (–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö)
# ------------------------------------------------------------
def load_published_ids() -> Set[str]:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ ID —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –∏–∑ config/config_public.json –≤ B2.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç set —Å ID. –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π set.
    """
    local_config_path = os.path.join(DOWNLOAD_DIR, "config_public.json")
    config_key = "config/config_public.json" # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –±–∞–∫–µ—Ç–µ
    published_ids = set()
    try:
        print(f"üì• –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å {config_key} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö ID...")
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        os.makedirs(os.path.dirname(local_config_path), exist_ok=True)
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ B2
        bucket.download_file_by_name(config_key).save_to(local_config_path)
        # –ß–∏—Ç–∞–µ–º JSON –∏–∑ —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        with open(local_config_path, "r", encoding="utf-8") as f:
            data = json.load(f)
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ø–∏—Å–æ–∫ ID –∏–∑ –ø–æ–ª—è 'generation_id'
        published = data.get("generation_id", [])
        if isinstance(published, list):
             published_ids = set(published) # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
             print(f"‚ÑπÔ∏è –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(published_ids)} –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö ID –∏–∑ {config_key}.")
        else:
             print(f"‚ö†Ô∏è –ü–æ–ª–µ 'generation_id' –≤ {config_key} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ø–∏—Å–∫–æ–º. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
        # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é –∫–æ–Ω—Ñ–∏–≥–∞ –ø–æ—Å–ª–µ —á—Ç–µ–Ω–∏—è
        os.remove(local_config_path)

    except FileNotPresent:
         # –ï—Å–ª–∏ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ B2, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
         print(f"‚ö†Ô∏è –§–∞–π–ª {config_key} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ B2. –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—Ä–∏ –ø–µ—Ä–≤–æ–π —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")
    except json.JSONDecodeError as e:
         print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –≤ —Ñ–∞–π–ª–µ {config_key}: {e}. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
         # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–∫–∞—á–∞–ª—Å—è, –Ω–æ –±–∏—Ç—ã–π, —É–¥–∞–ª—è–µ–º –µ–≥–æ –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é
         if os.path.exists(local_config_path): os.remove(local_config_path)
    except B2Error as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ {config_key}: {e}. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
        if os.path.exists(local_config_path): os.remove(local_config_path)
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—á–∏—Ö –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–ª–∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å {config_key}: {e}. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
        if os.path.exists(local_config_path): os.remove(local_config_path)
    return published_ids

def save_published_ids(pub_ids: Set[str]):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö ID –≤ config_public.json –ª–æ–∫–∞–ª—å–Ω–æ
    –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ –≤ B2.
    """
    local_config_path = os.path.join(DOWNLOAD_DIR, "config_public.json")
    config_key = "config/config_public.json"
    try:
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è JSON: —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–æ–º 'generation_id'
        # –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º - –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º ID –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞
        data = {"generation_id": sorted(list(pub_ids))}

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
        os.makedirs(os.path.dirname(local_config_path), exist_ok=True) # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        with open(local_config_path, "w", encoding="utf-8") as f:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
            json.dump(data, f, ensure_ascii=False, indent=4)
        print(f"üíæ –õ–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ ID –≤ {local_config_path}")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ B2, –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—è —Å—Ç–∞—Ä—ã–π
        print(f"üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π {config_key} –≤ B2...")
        bucket.upload_local_file(local_config_path, config_key)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω {config_key} –≤ B2. –í—Å–µ–≥–æ ID: {len(pub_ids)}")

        # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        os.remove(local_config_path)

    except Exception as e:
        # –õ–æ–≤–∏–º –ª—é–±—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å {config_key}: {e}")
        # –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –æ—Å—Ç–∞–ª—Å—è, —É–¥–∞–ª—è–µ–º –µ–≥–æ, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ
        if os.path.exists(local_config_path):
            try:
                os.remove(local_config_path)
            except Exception as rm_err:
                print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª {local_config_path}: {rm_err}")

# ------------------------------------------------------------
# 3) –£–¥–∞–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ —Å–∂–∏–º–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
# ------------------------------------------------------------
def remove_system_phrases(text: str) -> str:
    """
    –û—á–∏—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ ("–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ:", "–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:" –∏ —Ç.–ø.)
    –∏ –∑–∞–º–µ–Ω—è–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫ –Ω–∞ –¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏.
    """
    if not isinstance(text, str): # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø—Ä–∏–¥–µ—Ç –Ω–µ —Å—Ç—Ä–æ–∫–∞
        return ""

    system_phrases = [
        "–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ:", "–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:", "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:", "–ó–∞–∫–ª—é—á–µ–Ω–∏–µ:",
        "üî•–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ", "üìö–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å", "üîç–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç"
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—Ä–∞–∑—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    ]
    clean_text = text
    for phrase in system_phrases:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ—Ä–∞–∑—ã –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞
        # –∏ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏/–ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ —Å—Ç—Ä–æ–∫ –≤–æ–∫—Ä—É–≥ –Ω–µ–µ.
        # re.escape —ç–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –≤ —Ñ—Ä–∞–∑–µ, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å.
        clean_text = re.sub(r'^\s*' + re.escape(phrase) + r'\s*\n?', '', clean_text, flags=re.IGNORECASE | re.MULTILINE).strip()
        clean_text = re.sub(r'\n\s*' + re.escape(phrase) + r'\s*', '\n', clean_text, flags=re.IGNORECASE).strip()


    # –ó–∞–º–µ–Ω—è–µ–º —Ç—Ä–∏ –∏ –±–æ–ª–µ–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –¥–≤–∞ (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–±–∑–∞—Ü—ã)
    clean_text = re.sub(r"\n\s*\n+", "\n\n", clean_text)
    # –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Ç–µ–∫—Å—Ç–∞
    return clean_text.strip()

# ------------------------------------------------------------
# 4) –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ generation_id (–∞–ª—å–±–æ–º + –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è) - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
# ------------------------------------------------------------
async def publish_generation_id(gen_id: str, folder: str, published_ids: Set[str]) -> bool:
    """
    –ü—É–±–ª–∏–∫—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ–¥–Ω–æ–≥–æ generation_id:
    1. –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ (PNG + MP4) —Å –ø–æ–¥–ø–∏—Å—å—é –∏–∑ content.—Ç–µ–∫—Å—Ç.
    2. –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞—Ä–∫–∞–∑–º–æ–º (–∏–∑ sarcasm.comment.–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π).
    3. –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø—Ä–æ—Å–æ–º (–∏–∑ sarcasm.poll).
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –∏–Ω–∞—á–µ False.
    """
    print(f"‚öôÔ∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º gen_id: {gen_id} –∏–∑ –ø–∞–ø–∫–∏ {folder}")
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª—é—á–∏ (–ø—É—Ç–∏) –∫ —Ñ–∞–π–ª–∞–º –≤ B2
    json_file_key = f"{folder}{gen_id}.json"
    video_file_key = f"{folder}{gen_id}.mp4"
    png_file_key = f"{folder}{gen_id}.png" # –ö–ª—é—á –¥–ª—è PNG —Ñ–∞–π–ª–∞

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    local_json_path = os.path.join(DOWNLOAD_DIR, f"{gen_id}.json")
    local_video_path = os.path.join(DOWNLOAD_DIR, f"{gen_id}.mp4")
    local_png_path = os.path.join(DOWNLOAD_DIR, f"{gen_id}.png") # –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è PNG

    # –§–ª–∞–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    json_downloaded = False
    video_downloaded = False
    png_downloaded = False

    # --- –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ ---
    # 1. –°–∫–∞—á–∏–≤–∞–µ–º JSON (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    try:
        print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º JSON: {json_file_key} -> {local_json_path}")
        os.makedirs(os.path.dirname(local_json_path), exist_ok=True) # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
        bucket.download_file_by_name(json_file_key).save_to(local_json_path)
        json_downloaded = True
        print(f"‚úÖ JSON —Å–∫–∞—á–∞–Ω: {local_json_path}")
    except FileNotPresent:
        print(f"‚ö†Ô∏è JSON —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {json_file_key}. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")
        return False # –ë–µ–∑ JSON –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –Ω–µ—Ç —Å–º—ã—Å–ª–∞
    except B2Error as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ JSON {json_file_key}: {e}")
        return False
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ JSON {json_file_key}: {e}")
        return False

    # 2. –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å PNG (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è –∞–ª—å–±–æ–º–∞)
    try:
        print(f"üì• –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å PNG: {png_file_key} -> {local_png_path}")
        os.makedirs(os.path.dirname(local_png_path), exist_ok=True)
        bucket.download_file_by_name(png_file_key).save_to(local_png_path)
        png_downloaded = True
        print(f"‚úÖ PNG —Å–∫–∞—á–∞–Ω: {local_png_path}")
    except FileNotPresent:
        print(f"‚ÑπÔ∏è PNG —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è {gen_id}. –ê–ª—å–±–æ–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±–µ–∑ –Ω–µ–≥–æ, –µ—Å–ª–∏ –µ—Å—Ç—å –≤–∏–¥–µ–æ.")
    except B2Error as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ PNG {png_file_key}: {e}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ PNG {png_file_key}: {e}")

    # 3. –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è –∞–ª—å–±–æ–º–∞)
    try:
        print(f"üì• –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ: {video_file_key} -> {local_video_path}")
        os.makedirs(os.path.dirname(local_video_path), exist_ok=True)
        bucket.download_file_by_name(video_file_key).save_to(local_video_path)
        video_downloaded = True
        print(f"‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ: {local_video_path}")
    except FileNotPresent:
        print(f"‚ÑπÔ∏è –í–∏–¥–µ–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è {gen_id}. –ê–ª—å–±–æ–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±–µ–∑ –Ω–µ–≥–æ, –µ—Å–ª–∏ –µ—Å—Ç—å PNG.")
    except B2Error as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ {video_file_key}: {e}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ {video_file_key}: {e}")

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ JSON –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ---
    caption_text = "" # –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –∫ –∞–ª—å–±–æ–º—É
    sarcasm_comment = "" # –¢–µ–∫—Å—Ç —Å–∞—Ä–∫–∞–∑–º–∞
    poll_question = "" # –í–æ–ø—Ä–æ—Å –¥–ª—è –æ–ø—Ä–æ—Å–∞
    poll_options = [] # –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ–ø—Ä–æ—Å–∞
    json_processed_successfully = False # –§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON

    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π JSON
        with open(local_json_path, "r", encoding="utf-8") as f:
            data = json.load(f)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏ –ø–∞—Ä—Å–∏–º —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è "content"
        raw_content_str = data.get("content", "").strip()
        if raw_content_str:
            try:
                # –ü–æ–ª–µ content —Å–∞–º–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç—Ä–æ–∫—É JSON, –ø–∞—Ä—Å–∏–º –µ–µ
                content_data = json.loads(raw_content_str)
                # –ë–µ—Ä–µ–º —Ç–µ–∫—Å—Ç –ø–æ –∫–ª—é—á—É "—Ç–µ–∫—Å—Ç"
                caption_text = content_data.get("—Ç–µ–∫—Å—Ç", "").strip()
                if not caption_text:
                     print(f"‚ö†Ô∏è –ö–ª—é—á '—Ç–µ–∫—Å—Ç' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º JSON –ø–æ–ª—è 'content' ({gen_id}).")
            except json.JSONDecodeError:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–π JSON
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –ø–æ–ª—è 'content' –¥–ª—è {gen_id}. –ü–æ–¥–ø–∏—Å—å –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π.")
                caption_text = "" # –û—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –ø—É—Å—Ç–æ–π
            except Exception as e:
                 print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–ª—è 'content' –¥–ª—è {gen_id}: {e}")
                 caption_text = ""
        else:
            print(f"‚ÑπÔ∏è –ü–æ–ª–µ 'content' –ø—É—Å—Ç–æ–µ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ JSON –¥–ª—è {gen_id}.")

        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏ –æ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ—Ä–∞–∑ ("–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ:" –∏ —Ç.–¥.)
        caption_text = remove_system_phrases(caption_text)

        # –û–±—Ä–µ–∑–∞–µ–º –ø–æ–¥–ø–∏—Å—å –¥–æ 1024 —Å–∏–º–≤–æ–ª–æ–≤ (–ª–∏–º–∏—Ç Telegram –¥–ª—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø)
        if len(caption_text) > 1024:
            print(f"‚ö†Ô∏è –ü–æ–¥–ø–∏—Å—å –¥–ª—è {gen_id} —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è ({len(caption_text)} —Å–∏–º–≤). –û–±—Ä–µ–∑–∞–µ–º –¥–æ 1020...")
            caption_text = caption_text[:1020] + "..." # –û–±—Ä–µ–∑–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ

        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–∞—Ä–∫–∞–∑–º –∏–∑ –ø–æ–ª—è "sarcasm.comment"
        raw_sarcasm_comment_str = data.get("sarcasm", {}).get("comment", "").strip()
        if raw_sarcasm_comment_str:
             try:
                 # –ü–æ–ª–µ comment —Ç–æ–∂–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–π JSON
                 sarcasm_data = json.loads(raw_sarcasm_comment_str)
                 sarcasm_comment = sarcasm_data.get("–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", "").strip()
                 if not sarcasm_comment:
                      print(f"‚ö†Ô∏è –ö–ª—é—á '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º JSON –ø–æ–ª—è 'sarcasm.comment' ({gen_id}).")
             except json.JSONDecodeError:
                  print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –ø–æ–ª—è 'sarcasm.comment' –¥–ª—è {gen_id}. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å (–µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç).")
                  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–æ–º, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏
                  if raw_sarcasm_comment_str.strip() not in ["{}", ""]:
                       sarcasm_comment = raw_sarcasm_comment_str
                  else:
                       sarcasm_comment = ""
             except Exception as e:
                  print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ 'sarcasm.comment' –¥–ª—è {gen_id}: {e}")
                  sarcasm_comment = ""

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø—Ä–æ—Å–∞ –∏–∑ –ø–æ–ª—è "sarcasm.poll"
        poll_data = data.get("sarcasm", {}).get("poll", {})
        poll_question = poll_data.get("question", "").strip()
        # –ü–æ–ª—É—á–∞–µ–º –æ–ø—Ü–∏–∏, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É, —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        poll_options = [str(opt).strip() for opt in poll_data.get("options", []) if str(opt).strip()]

        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –≤–æ–ø—Ä–æ—Å–∞ –∏ –æ–ø—Ü–∏–π (–ª–∏–º–∏—Ç—ã Telegram)
        poll_question = poll_question[:300]
        poll_options = [opt[:100] for opt in poll_options][:10] # –ù–µ –±–æ–ª–µ–µ 10 –æ–ø—Ü–∏–π

        json_processed_successfully = True # JSON —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω

    except json.JSONDecodeError as e:
        # –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ JSON —Ñ–∞–π–ª–∞
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ JSON —Ñ–∞–π–ª–∞ {local_json_path}: {e}")
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –±–∏—Ç—ã–π JSON –≤ –ø–∞–ø–∫—É –æ—à–∏–±–æ–∫
        os.makedirs(ERROR_DIR, exist_ok=True)
        try:
            shutil.move(local_json_path, os.path.join(ERROR_DIR, os.path.basename(local_json_path)))
            print(f"üìÅ –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π JSON {gen_id}.json –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ {ERROR_DIR}")
        except Exception as move_err:
             print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π JSON: {move_err}")
        # –£–¥–∞–ª—è–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å, —Ç.–∫. JSON –ø–æ–≤—Ä–µ–∂–¥–µ–Ω
        if os.path.exists(local_png_path): os.remove(local_png_path)
        if os.path.exists(local_video_path): os.remove(local_video_path)
        return False # –í—ã—Ö–æ–¥, —Ç.–∫. –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
    except Exception as e:
        # –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ JSON
        print(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ JSON {gen_id}: {e}")
        # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∏—Å—å
        if os.path.exists(local_json_path): os.remove(local_json_path)
        if os.path.exists(local_png_path): os.remove(local_png_path)
        if os.path.exists(local_video_path): os.remove(local_video_path)
        return False

    # --- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram ---
    os.makedirs(PROCESSED_DIR, exist_ok=True) # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    album_sent = False # –§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª—å–±–æ–º–∞
    sarcasm_sent = False # –§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∞—Ä–∫–∞–∑–º–∞
    poll_sent = False # –§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø—Ä–æ—Å–∞

    # 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É (–∞–ª—å–±–æ–º)
    media_items = []
    png_file_handle = None
    video_file_handle = None

    try:
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
        if png_downloaded:
            png_file_handle = open(local_png_path, "rb")
            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ. –ü–æ–¥–ø–∏—Å—å –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫ –ø–µ—Ä–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É (–∏–ª–∏ –∫ —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω–æ –ø–µ—Ä–≤–æ–µ)
            media_items.append(InputMediaPhoto(png_file_handle, caption=caption_text if not media_items else "", parse_mode="HTML"))
        if video_downloaded:
            video_file_handle = open(local_video_path, "rb")
             # –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –±—ã–ª–æ –∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
            media_items.append(InputMediaVideo(video_file_handle, caption=caption_text if not media_items else "", parse_mode="HTML", supports_streaming=True))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É, –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç (PNG –∏–ª–∏ –í–∏–¥–µ–æ)
        if media_items:
            print(f"‚úàÔ∏è –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É ({'PNG' if png_downloaded else ''}{'+' if png_downloaded and video_downloaded else ''}{'MP4' if video_downloaded else ''}) –¥–ª—è {gen_id}...")
            await bot.send_media_group(
                chat_id=TELEGRAM_CHAT_ID,
                media=media_items,
                read_timeout=120, # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
                connect_timeout=120,
                write_timeout=120
            )
            album_sent = True
            print(f"‚úÖ –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –¥–ª—è {gen_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
        else:
            # –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –µ—Å–ª–∏ –Ω–µ —Å–∫–∞—á–∞–ª—Å—è –Ω–∏ PNG, –Ω–∏ –í–∏–¥–µ–æ
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –Ω–∏ PNG, –Ω–∏ –í–∏–¥–µ–æ –¥–ª—è {gen_id}. –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
            # –ï—Å–ª–∏ –±—ã–ª —Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏, –æ–Ω —Ç–æ–∂–µ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, —Ç.–∫. –Ω–µ—Ç –º–µ–¥–∏–∞
            if caption_text:
                 print(f"   (–¢–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏ '{caption_text[:50]}...' –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±–µ–∑ –º–µ–¥–∏–∞)")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã –¥–ª—è {gen_id}: {e}")
        # –û—Å—Ç–∞–≤–ª—è–µ–º album_sent = False
    finally:
        # –í–∞–∂–Ω–æ: –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–µ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ã, –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞
        if png_file_handle:
            png_file_handle.close()
        if video_file_handle:
            video_file_handle.close()

    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞—Ä–∫–∞–∑–º, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∞–ª—å–±–æ–º–∞)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ JSON –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç —Å–∞—Ä–∫–∞–∑–º–∞
    if json_processed_successfully and sarcasm_comment:
        sarcasm_text_formatted = f"üìú <i>{sarcasm_comment}</i>" # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—É—Ä—Å–∏–≤–æ–º
        # –û–±—Ä–µ–∑–∞–µ–º, –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–ª–∏–º–∏—Ç Telegram 4096)
        if len(sarcasm_text_formatted) > 4096:
            print(f"‚ö†Ô∏è –¢–µ–∫—Å—Ç —Å–∞—Ä–∫–∞–∑–º–∞ –¥–ª—è {gen_id} —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –û–±—Ä–µ–∑–∞–µ–º...")
            sarcasm_text_formatted = sarcasm_text_formatted[:4090] + "..."
        try:
            print(f"‚úàÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞—Ä–∫–∞–∑–º –¥–ª—è {gen_id}...")
            await bot.send_message(
                chat_id=TELEGRAM_CHAT_ID,
                text=sarcasm_text_formatted,
                parse_mode="HTML" # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è –∫—É—Ä—Å–∏–≤–∞
            )
            sarcasm_sent = True
            print(f"‚úÖ –°–∞—Ä–∫–∞–∑–º –¥–ª—è {gen_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–∞—Ä–∫–∞–∑–º–∞ –¥–ª—è {gen_id}: {e}")

    # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –æ–Ω –≤–∞–ª–∏–¥–µ–Ω (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∞–ª—å–±–æ–º–∞)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ JSON –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å –∏ –º–∏–Ω–∏–º—É–º 2 –æ–ø—Ü–∏–∏
    if json_processed_successfully and poll_question and len(poll_options) >= 2:
        poll_question_formatted = f"üé≠ {poll_question}" # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫ –≤–æ–ø—Ä–æ—Å—É
        try:
            print(f"‚úàÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø—Ä–æ—Å –¥–ª—è {gen_id}...")
            await bot.send_poll(
                chat_id=TELEGRAM_CHAT_ID,
                question=poll_question_formatted,
                options=poll_options,
                is_anonymous=True # –ê–Ω–æ–Ω–∏–º–Ω—ã–π –æ–ø—Ä–æ—Å
            )
            poll_sent = True
            print(f"‚úÖ –û–ø—Ä–æ—Å –¥–ª—è {gen_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–ø—Ä–æ—Å–∞ –¥–ª—è {gen_id}: {e}")
    elif json_processed_successfully and poll_question and len(poll_options) < 2:
        # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –µ—Å—Ç—å, –∞ –æ–ø—Ü–∏–π –º–∞–ª–æ
        print(f"‚ÑπÔ∏è –û–ø—Ä–æ—Å –¥–ª—è {gen_id} –∏–º–µ–µ—Ç –≤–æ–ø—Ä–æ—Å '{poll_question[:50]}...', –Ω–æ –º–µ–Ω—å—à–µ 2 –≤–∞–ª–∏–¥–Ω—ã—Ö –æ–ø—Ü–∏–π. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")

    # --- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ ---
    # –£—Å–ø–µ—Ö –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∫–æ–π –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –∞–ª—å–±–æ–º–∞ (—Ö–æ—Ç—è –±—ã —Å –æ–¥–Ω–∏–º –º–µ–¥–∏–∞)
    success = album_sent

    if success:
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–∞–ª—å–±–æ–º–∞) –¥–ª—è {gen_id}.")
        # –î–æ–±–∞–≤–ª—è–µ–º ID –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ B2
        published_ids.add(gen_id)
        save_published_ids(published_ids) # –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–∑–æ–≤–µ—Ç print –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è
        # print(f"üìù ID {gen_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö.") # –≠—Ç–æ—Ç print –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ save_published_ids

        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É processed
        files_to_move = [local_png_path, local_video_path, local_json_path]
        for file_path in files_to_move:
            if os.path.exists(file_path): # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–±—ã–ª —Å–∫–∞—á–∞–Ω)
                try:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ü–µ–ª–µ–≤–æ–π –ø—É—Ç—å –≤ –ø–∞–ø–∫–µ processed
                    destination_path = os.path.join(PROCESSED_DIR, os.path.basename(file_path))
                    shutil.move(file_path, destination_path)
                    print(f"  üìÅ –§–∞–π–ª {os.path.basename(file_path)} –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ {PROCESSED_DIR}")
                except Exception as e:
                    print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª {os.path.basename(file_path)} –≤ processed: {e}")
                    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–∞–π–ª –≤ download

    else:
        # –ï—Å–ª–∏ –∞–ª—å–±–æ–º –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (–Ω–∏ PNG, –Ω–∏ –í–∏–¥–µ–æ –Ω–µ —Å–∫–∞—á–∞–ª–∏—Å—å –∏–ª–∏ –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏)
        if json_processed_successfully: # –ù–æ JSON –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω
             print(f"‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç (–∞–ª—å–±–æ–º) –¥–ª—è {gen_id} –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. ID –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ.")
             # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–ø. —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
             print(f"   (–°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏: –°–∞—Ä–∫–∞–∑–º - {'–î–∞' if sarcasm_sent else '–ù–µ—Ç'}, –û–ø—Ä–æ—Å - {'–î–∞' if poll_sent else '–ù–µ—Ç'})")
             # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã, —á—Ç–æ–±—ã –Ω–µ –ø—ã—Ç–∞—Ç—å—Å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏—Ö —Å–Ω–æ–≤–∞ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ
             # (–µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–µ —Ö–æ—Ç–∏–º —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫)
             print(f"   üóëÔ∏è –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è {gen_id}, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —Å–ª–µ–¥. –∑–∞–ø—É—Å–∫–µ.")
        # else: # –ï—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON, —Ñ–∞–π–ª—ã —É–∂–µ —É–¥–∞–ª–µ–Ω—ã –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ errors

        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã (JSON, PNG, Video), –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è –≤ download
        files_to_delete = [local_png_path, local_video_path, local_json_path]
        for file_path in files_to_delete:
             # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ processed –∏–ª–∏ errors
             if os.path.exists(file_path) and PROCESSED_DIR not in os.path.dirname(file_path) and ERROR_DIR not in os.path.dirname(file_path):
                  try:
                       os.remove(file_path)
                       # print(f"   üóëÔ∏è –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {file_path}") # –ú–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                  except Exception as e:
                       print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª {file_path}: {e}")

    return success # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–ª—å–±–æ–º –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

# ------------------------------------------------------------
# 5) –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ (–ø–æ–∏—Å–∫ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è)
# ------------------------------------------------------------
async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞.
    """
    print("\n" + "="*50)
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ B2 -> Telegram (v2: –ê–ª—å–±–æ–º)")
    print("="*50)

    # –û—á–∏—â–∞–µ–º/—Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã
    print("üßπ –û—á–∏—â–∞–µ–º/—Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
    shutil.rmtree(DOWNLOAD_DIR, ignore_errors=True) # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É download, –∏–≥–Ω–æ—Ä–∏—Ä—É—è –æ—à–∏–±–∫–∏
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –ø–∞–ø–∫—É download
    os.makedirs(PROCESSED_DIR, exist_ok=True) # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ processed —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    os.makedirs(ERROR_DIR, exist_ok=True)     # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ errors —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    print(f"‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏ –≥–æ—Ç–æ–≤—ã.")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º ID —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –∏–∑ B2
    published_ids = load_published_ids()

    # –ü–∞–ø–∫–∏ –≤ B2 –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å)
    folders_to_scan = ["444/", "555/", "666/"]
    print(f"üìÇ –ü–∞–ø–∫–∏ –≤ –±–∞–∫–µ—Ç–µ '{S3_BUCKET_NAME}' –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {', '.join(folders_to_scan)}")

    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ gen_id –∏–∑ –≤—Å–µ—Ö –ø–∞–ø–æ–∫
    # –°–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ—Ä—Ç–µ–∂–∏: (gen_id, folder_path)
    unpublished_items: List[Tuple[str, str]] = []

    # –°–∫–∞–Ω–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
    for folder in folders_to_scan:
        print(f"\nüîé –°–∫–∞–Ω–∏—Ä—É–µ–º –ø–∞–ø–∫—É: {folder}")
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ (—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            # `recursive=False` - –∏—â–µ–º —Ç–æ–ª—å–∫–æ –≤ –∫–æ—Ä–Ω–µ –ø–∞–ø–∫–∏ folder
            # `recursive=True` - –∏—â–µ–º –≤ folder –∏ –≤—Å–µ—Ö –µ–µ –ø–æ–¥–ø–∞–ø–∫–∞—Ö
            ls_result = bucket.ls(folder_to_list=folder, recursive=False, show_versions=False) # show_versions=False - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ —Ñ–∞–π–ª–æ–≤

            gen_ids_in_folder = set() # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ª–∏—Å—Ç–∏–Ω–≥–∞
            for file_version, _folder_name in ls_result:
                file_name = file_version.file_name # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ –±–∞–∫–µ—Ç–µ

                # –ù–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç —Ç–æ–ª—å–∫–æ JSON —Ñ–∞–π–ª—ã –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ
                if file_name.startswith(folder) and file_name.endswith(".json"):
                     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∏–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ, –∞ –Ω–µ –≤ –ø–æ–¥–ø–∞–ø–∫–µ (–µ—Å–ª–∏ recursive=False)
                     # –ü—Ä–∏–º–µ—Ä: –¥–ª—è –ø–∞–ø–∫–∏ '444/', —Ñ–∞–π–ª '444/subdir/file.json' –±—É–¥–µ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω
                     if os.path.dirname(file_name.replace(folder, '', 1)) == '':
                         # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ –ø—É—Ç–∏ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è - —ç—Ç–æ –∏ –µ—Å—Ç—å gen_id
                         base_name = os.path.basename(file_name)
                         gen_id = os.path.splitext(base_name)[0]
                         # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç ID (YYYYMMDD-HHMM) —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
                         if re.fullmatch(r"\d{8}-\d{4}", gen_id):
                              gen_ids_in_folder.add(gen_id)
                         else:
                              print(f"   ‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∏–º–µ–Ω–µ–º ID: {file_name}")

            print(f"   ‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω–æ {len(gen_ids_in_folder)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID —Ñ–æ—Ä–º–∞—Ç–∞ YYYYMMDD-HHMM –≤ {folder}")

            # –û—Ç–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ ID –∏–∑ —ç—Ç–æ–π –ø–∞–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö
            new_ids = gen_ids_in_folder - published_ids
            if new_ids:
                print(f"   ‚ú® –ù–∞–π–¥–µ–Ω–æ {len(new_ids)} –Ω–æ–≤—ã—Ö (–Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö) ID –≤ {folder}.")
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ ID –∏ –ø–∞–ø–∫—É, –≥–¥–µ –æ–Ω–∏ –Ω–∞–π–¥–µ–Ω—ã, –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
                for gen_id in new_ids:
                    unpublished_items.append((gen_id, folder))
            else:
                print(f"   ‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö ID –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ {folder}.")

        except B2Error as e:
            # –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ B2 SDK –ø—Ä–∏ –ª–∏—Å—Ç–∏–Ω–≥–µ –ø–∞–ø–∫–∏
            print(f"   ‚ùå –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞–ø–∫–∏ {folder}: {e}")
        except Exception as e:
            # –õ–æ–≤–∏–º –ø—Ä–æ—á–∏–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏
            print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞–ø–∫–∏ {folder}: {e}")
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –ø–∞–ø–∫–∏

    # –ï—Å–ª–∏ –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –ø–∞–ø–æ–∫ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    if unpublished_items:
        print(f"\n‚è≥ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ {len(unpublished_items)} –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ gen_id (—Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏)
        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫ 'YYYYMMDD-HHMM' —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        unpublished_items.sort(key=lambda item: item[0])
        print("   üî¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏ (gen_id)...")

        # –ë–µ—Ä–µ–º —Å–∞–º—ã–π —Å—Ç–∞—Ä—ã–π –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç (–ø–µ—Ä–≤—ã–π –ø–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏)
        gen_id_to_publish, folder_to_publish = unpublished_items[0]

        print(f"\nüéØ –í—ã–±—Ä–∞–Ω–∞ —Å–∞–º–∞—è —Å—Ç–∞—Ä–∞—è –≥—Ä—É–ø–ø–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ID={gen_id_to_publish} –∏–∑ –ø–∞–ø–∫–∏ {folder_to_publish}")
        print("-" * 50)

        # –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É, –ø–µ—Ä–µ–¥–∞–≤–∞—è —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ published_ids
        # –§—É–Ω–∫—Ü–∏—è publish_generation_id —Å–∞–º–∞ –æ–±–Ω–æ–≤–∏—Ç published_ids –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –µ–≥–æ –≤ B2 –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞
        success = await publish_generation_id(gen_id_to_publish, folder_to_publish, published_ids)

        print("-" * 50)
        if success:
            # –ï—Å–ª–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è (–æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª—å–±–æ–º–∞) –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≥—Ä—É–ø–ø–∞ {gen_id_to_publish}.")
            # –°–ø–∏—Å–æ–∫ published_ids —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤–Ω—É—Ç—Ä–∏ publish_generation_id
        else:
            # –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è (–∞–ª—å–±–æ–º) –Ω–µ —É–¥–∞–ª–∞—Å—å
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≥—Ä—É–ø–ø—ã {gen_id_to_publish}. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–º. –≤—ã—à–µ.")
            # –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ ID –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ published_ids, –∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–ø—Ä–æ–±—É–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
            # —ç—Ç—É –∂–µ –≥—Ä—É–ø–ø—É –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ (–µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –≤ —Å–∞–º–∏—Ö —Ñ–∞–π–ª–∞—Ö).

    else:
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ ID –≤–æ –≤—Å–µ—Ö –ø–∞–ø–∫–∞—Ö
        print("\nüéâ –ù–µ—Ç –Ω–æ–≤—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–æ –≤—Å–µ—Ö –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö.")

    print("\nüèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")
    print("="*50 + "\n")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É
if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é main()
    try:
        asyncio.run(main())
    except RuntimeError as e:
        # –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ —É—Ä–æ–≤–Ω—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    except Exception as e:
        # –õ–æ–≤–∏–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ
         print(f"\nüí• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

