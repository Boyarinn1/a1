#!/usr/bin/env python3
import os
import json
import asyncio
import shutil
import re
from typing import Set, List, Tuple
# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è Telegram API
from telegram import Bot, InputMediaPhoto, InputMediaVideo
# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è B2 SDK –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
import b2sdk.v2
from b2sdk.v2.exception import FileNotPresent, B2Error

# ------------------------------------------------------------
# 1) –°—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# ------------------------------------------------------------
S3_KEY_ID = os.getenv("S3_KEY_ID")
S3_APPLICATION_KEY = os.getenv("S3_APPLICATION_KEY")
S3_BUCKET_NAME = os.getenv("S3_BUCKET_NAME")
S3_ENDPOINT = os.getenv("S3_ENDPOINT", "production") # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'production', –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not all([
    S3_KEY_ID,
    S3_APPLICATION_KEY,
    S3_BUCKET_NAME,
    TELEGRAM_TOKEN,
    TELEGRAM_CHAT_ID
]):
    # –ï—Å–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É
    raise RuntimeError("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
else:
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

# ------------------------------------------------------------
# 2) –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç–∏, –æ–±—ä–µ–∫—Ç Telegram-–±–æ—Ç–∞ –∏ B2 SDK
# ------------------------------------------------------------
BASE_DIR = os.path.dirname(__file__) # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–∫—Ä–∏–ø—Ç
DOWNLOAD_DIR = os.path.join(BASE_DIR, "downloaded") # –ü–∞–ø–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
PROCESSED_DIR = os.path.join(DOWNLOAD_DIR, "processed") # –ü–∞–ø–∫–∞ –¥–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
ERROR_DIR = os.path.join(DOWNLOAD_DIR, "errors") # –ü–∞–ø–∫–∞ –¥–ª—è —Ñ–∞–π–ª–æ–≤ —Å –æ—à–∏–±–∫–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∏—Ç—ã–π JSON)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
try:
    bot = Bot(token=TELEGRAM_TOKEN)
    print("‚úÖ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
except Exception as e:
    raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞: {e}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è B2 API
try:
    print("‚öôÔ∏è –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Backblaze B2...")
    info = b2sdk.v2.InMemoryAccountInfo()
    b2_api = b2sdk.v2.B2Api(info)
    b2_api.authorize_account(S3_ENDPOINT, S3_KEY_ID, S3_APPLICATION_KEY)
    bucket = b2_api.get_bucket_by_name(S3_BUCKET_NAME)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ B2 –±–∞–∫–µ—Ç—É: {S3_BUCKET_NAME}")
except Exception as e:
    raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ B2: {e}")

# ------------------------------------------------------------
# –†–∞–±–æ—Ç–∞ —Å config_public.json (–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö)
# ------------------------------------------------------------
def load_published_ids() -> Set[str]:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ ID —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –∏–∑ config/config_public.json –≤ B2.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç set —Å ID. –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π set.
    """
    local_config_path = os.path.join(DOWNLOAD_DIR, "config_public.json")
    config_key = "config/config_public.json" # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –±–∞–∫–µ—Ç–µ
    published_ids = set()
    try:
        print(f"üì• –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å {config_key} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö ID...")
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        os.makedirs(os.path.dirname(local_config_path), exist_ok=True)
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ B2
        bucket.download_file_by_name(config_key).save_to(local_config_path)
        # –ß–∏—Ç–∞–µ–º JSON –∏–∑ —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        with open(local_config_path, "r", encoding="utf-8") as f:
            data = json.load(f)
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ø–∏—Å–æ–∫ ID –∏–∑ –ø–æ–ª—è 'generation_id'
        published = data.get("generation_id", [])
        if isinstance(published, list):
             published_ids = set(published) # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
             print(f"‚ÑπÔ∏è –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(published_ids)} –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö ID –∏–∑ {config_key}.")
        else:
             print(f"‚ö†Ô∏è –ü–æ–ª–µ 'generation_id' –≤ {config_key} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ø–∏—Å–∫–æ–º. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
        # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é –∫–æ–Ω—Ñ–∏–≥–∞ –ø–æ—Å–ª–µ —á—Ç–µ–Ω–∏—è
        os.remove(local_config_path)

    except FileNotPresent:
         # –ï—Å–ª–∏ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ B2, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
         print(f"‚ö†Ô∏è –§–∞–π–ª {config_key} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ B2. –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—Ä–∏ –ø–µ—Ä–≤–æ–π —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")
    except json.JSONDecodeError as e:
         print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –≤ —Ñ–∞–π–ª–µ {config_key}: {e}. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
         # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–∫–∞—á–∞–ª—Å—è, –Ω–æ –±–∏—Ç—ã–π, —É–¥–∞–ª—è–µ–º –µ–≥–æ –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é
         if os.path.exists(local_config_path): os.remove(local_config_path)
    except B2Error as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ {config_key}: {e}. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
        if os.path.exists(local_config_path): os.remove(local_config_path)
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—á–∏—Ö –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–ª–∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å {config_key}: {e}. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
        if os.path.exists(local_config_path): os.remove(local_config_path)
    return published_ids

def save_published_ids(pub_ids: Set[str]):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö ID –≤ config_public.json –ª–æ–∫–∞–ª—å–Ω–æ
    –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ –≤ B2.
    """
    local_config_path = os.path.join(DOWNLOAD_DIR, "config_public.json")
    config_key = "config/config_public.json"
    try:
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è JSON: —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–æ–º 'generation_id'
        # –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º - –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º ID –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞
        data = {"generation_id": sorted(list(pub_ids))}

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
        os.makedirs(os.path.dirname(local_config_path), exist_ok=True) # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        with open(local_config_path, "w", encoding="utf-8") as f:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
            json.dump(data, f, ensure_ascii=False, indent=4)
        print(f"üíæ –õ–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ ID –≤ {local_config_path}")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ B2, –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—è —Å—Ç–∞—Ä—ã–π
        print(f"üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π {config_key} –≤ B2...")
        bucket.upload_local_file(local_config_path, config_key)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω {config_key} –≤ B2. –í—Å–µ–≥–æ ID: {len(pub_ids)}")

        # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        os.remove(local_config_path)

    except Exception as e:
        # –õ–æ–≤–∏–º –ª—é–±—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å {config_key}: {e}")
        # –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –æ—Å—Ç–∞–ª—Å—è, —É–¥–∞–ª—è–µ–º –µ–≥–æ, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ
        if os.path.exists(local_config_path):
            try:
                os.remove(local_config_path)
            except Exception as rm_err:
                print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª {local_config_path}: {rm_err}")

# ------------------------------------------------------------
# 3) –£–¥–∞–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ —Å–∂–∏–º–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
# ------------------------------------------------------------
def remove_system_phrases(text: str) -> str:
    """
    –û—á–∏—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ ("–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ:", "–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:" –∏ —Ç.–ø.)
    –∏ –∑–∞–º–µ–Ω—è–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫ –Ω–∞ –¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏.
    """
    if not isinstance(text, str): # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø—Ä–∏–¥–µ—Ç –Ω–µ —Å—Ç—Ä–æ–∫–∞
        return ""

    system_phrases = [
        "–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ:", "–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:", "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:", "–ó–∞–∫–ª—é—á–µ–Ω–∏–µ:",
        "üî•–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ", "üìö–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å", "üîç–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç"
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—Ä–∞–∑—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    ]
    clean_text = text
    for phrase in system_phrases:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ—Ä–∞–∑—ã –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞
        # –∏ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏/–ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ —Å—Ç—Ä–æ–∫ –≤–æ–∫—Ä—É–≥ –Ω–µ–µ.
        # re.escape —ç–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –≤ —Ñ—Ä–∞–∑–µ, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å.
        clean_text = re.sub(r'^\s*' + re.escape(phrase) + r'\s*\n?', '', clean_text, flags=re.IGNORECASE | re.MULTILINE).strip()
        clean_text = re.sub(r'\n\s*' + re.escape(phrase) + r'\s*', '\n', clean_text, flags=re.IGNORECASE).strip()


    # –ó–∞–º–µ–Ω—è–µ–º —Ç—Ä–∏ –∏ –±–æ–ª–µ–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –¥–≤–∞ (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–±–∑–∞—Ü—ã)
    clean_text = re.sub(r"\n\s*\n+", "\n\n", clean_text)
    # –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Ç–µ–∫—Å—Ç–∞
    return clean_text.strip()

# ------------------------------------------------------------
# 4) –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ generation_id (–§–æ—Ç–æ + –í–∏–¥–µ–æ –æ—Ç–¥–µ–ª—å–Ω–æ) - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
# ------------------------------------------------------------
async def publish_generation_id(gen_id: str, folder: str, published_ids: Set[str]) -> bool:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç JSON, PNG, Video.
    –ï—Å–ª–∏ –≤—Å–µ 3 —Ñ–∞–π–ª–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç:
    1. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –§–æ—Ç–æ (PNG) –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏.
    2. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –í–∏–¥–µ–æ (MP4) —Å –ø–æ–¥–ø–∏—Å—å—é (caption_text).
    3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞—Ä–∫–∞–∑–º–æ–º.
    4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø—Ä–æ—Å–æ–º.
    –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ —Ñ–∞–π–ª–æ–≤ (PNG –∏–ª–∏ Video) –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏—é.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ–¥–∏–∞ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã, –∏–Ω–∞—á–µ False.
    """
    print(f"‚öôÔ∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º gen_id: {gen_id} –∏–∑ –ø–∞–ø–∫–∏ {folder}")
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª—é—á–∏ (–ø—É—Ç–∏) –∫ —Ñ–∞–π–ª–∞–º –≤ B2
    json_file_key = f"{folder}{gen_id}.json"
    video_file_key = f"{folder}{gen_id}.mp4"
    png_file_key = f"{folder}{gen_id}.png"

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    local_json_path = os.path.join(DOWNLOAD_DIR, f"{gen_id}.json")
    local_video_path = os.path.join(DOWNLOAD_DIR, f"{gen_id}.mp4")
    local_png_path = os.path.join(DOWNLOAD_DIR, f"{gen_id}.png")

    # –§–ª–∞–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    json_downloaded = False
    video_downloaded = False
    png_downloaded = False

    # --- –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ ---
    # 1. –°–∫–∞—á–∏–≤–∞–µ–º JSON (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    try:
        print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º JSON: {json_file_key} -> {local_json_path}")
        os.makedirs(os.path.dirname(local_json_path), exist_ok=True)
        bucket.download_file_by_name(json_file_key).save_to(local_json_path)
        json_downloaded = True
        print(f"‚úÖ JSON —Å–∫–∞—á–∞–Ω: {local_json_path}")
    except FileNotPresent:
        print(f"‚ö†Ô∏è JSON —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {json_file_key}. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")
        return False # –ë–µ–∑ JSON –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –Ω–µ—Ç —Å–º—ã—Å–ª–∞
    except B2Error as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ JSON {json_file_key}: {e}")
        return False
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ JSON {json_file_key}: {e}")
        return False

    # 2. –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å PNG
    try:
        print(f"üì• –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å PNG: {png_file_key} -> {local_png_path}")
        os.makedirs(os.path.dirname(local_png_path), exist_ok=True)
        bucket.download_file_by_name(png_file_key).save_to(local_png_path)
        png_downloaded = True
        print(f"‚úÖ PNG —Å–∫–∞—á–∞–Ω: {local_png_path}")
    except FileNotPresent:
        print(f"‚ö†Ô∏è PNG —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è {gen_id}.") # –í–∞–∂–Ω–æ, —á—Ç–æ —ç—Ç–æ warning, –∞ –Ω–µ info
    except B2Error as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ PNG {png_file_key}: {e}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ PNG {png_file_key}: {e}")

    # 3. –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ
    try:
        print(f"üì• –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ: {video_file_key} -> {local_video_path}")
        os.makedirs(os.path.dirname(local_video_path), exist_ok=True)
        bucket.download_file_by_name(video_file_key).save_to(local_video_path)
        video_downloaded = True
        print(f"‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ: {local_video_path}")
    except FileNotPresent:
        print(f"‚ö†Ô∏è –í–∏–¥–µ–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è {gen_id}.") # –í–∞–∂–Ω–æ, —á—Ç–æ —ç—Ç–æ warning, –∞ –Ω–µ info
    except B2Error as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ {video_file_key}: {e}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ {video_file_key}: {e}")

    # --- –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –í–°–ï–• —Ñ–∞–π–ª–æ–≤ (JSON —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω) ---
    if not (png_downloaded and video_downloaded):
        print(f"‚ùå –ì—Ä—É–ø–ø–∞ {gen_id} –Ω–µ–ø–æ–ª–Ω–∞—è (PNG: {png_downloaded}, –í–∏–¥–µ–æ: {video_downloaded}). –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è.")
        # –£–¥–∞–ª—è–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∏—Å—å
        files_to_delete = [local_png_path, local_video_path, local_json_path]
        for file_path in files_to_delete:
            if os.path.exists(file_path):
                try: os.remove(file_path)
                except Exception as e: print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª {file_path}: {e}")
        return False # –í–æ–∑–≤—Ä–∞—â–∞–µ–º False, —Ç.–∫. –ø—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–µ —Å–æ—Å—Ç–æ—è–ª–∞—Å—å

    # --- –ï—Å–ª–∏ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É JSON ---
    print(f"‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –¥–ª—è {gen_id} (JSON, PNG, –í–∏–¥–µ–æ) –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É...")
    caption_text = "" # –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –∫ –í–ò–î–ï–û
    sarcasm_comment = "" # –¢–µ–∫—Å—Ç —Å–∞—Ä–∫–∞–∑–º–∞
    poll_question = "" # –í–æ–ø—Ä–æ—Å –¥–ª—è –æ–ø—Ä–æ—Å–∞
    poll_options = [] # –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ–ø—Ä–æ—Å–∞
    json_processed_successfully = False

    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π JSON
        with open(local_json_path, "r", encoding="utf-8") as f:
            data = json.load(f)

        # --- –£–õ–£–ß–®–ï–ù–ù–û–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –¢–ï–ö–°–¢–ê –ü–û–î–ü–ò–°–ò (–¥–ª—è –≤–∏–¥–µ–æ) ---
        content_value = data.get("content")
        if isinstance(content_value, dict):
            caption_text = content_value.get("—Ç–µ–∫—Å—Ç", "").strip()
            if not caption_text: print(f"‚ö†Ô∏è –ö–ª—é—á '—Ç–µ–∫—Å—Ç' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç –≤ –æ–±—ä–µ–∫—Ç–µ 'content' ({gen_id}).")
        elif isinstance(content_value, str) and content_value.strip():
            raw_content_str = content_value.strip()
            try:
                content_data = json.loads(raw_content_str)
                caption_text = content_data.get("—Ç–µ–∫—Å—Ç", "").strip()
                if not caption_text: print(f"‚ö†Ô∏è –ö–ª—é—á '—Ç–µ–∫—Å—Ç' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º JSON –ø–æ–ª—è 'content' ({gen_id}).")
            except json.JSONDecodeError:
                if raw_content_str not in ["{}"]:
                     print(f"‚ÑπÔ∏è –ü–æ–ª–µ 'content' –¥–ª—è {gen_id} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å.")
                     caption_text = raw_content_str
                else:
                     print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –ø–æ–ª—è 'content' –¥–ª—è {gen_id}, –∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ '{{}}'. –ü–æ–¥–ø–∏—Å—å –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π.")
                     caption_text = ""
            except Exception as e:
                 print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–ª—è 'content' –¥–ª—è {gen_id}: {e}")
                 caption_text = ""
        else:
            print(f"‚ÑπÔ∏è –ü–æ–ª–µ 'content' –ø—É—Å—Ç–æ–µ, –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø –≤ JSON –¥–ª—è {gen_id}.")

        caption_text = remove_system_phrases(caption_text)
        print(f"DEBUG: –û—á–∏—â–µ–Ω–Ω—ã–π caption_text (–¥–ª—è –≤–∏–¥–µ–æ): '{caption_text}'")

        if len(caption_text) > 1024:
            print(f"‚ö†Ô∏è –ü–æ–¥–ø–∏—Å—å –¥–ª—è –≤–∏–¥–µ–æ {gen_id} —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è ({len(caption_text)} —Å–∏–º–≤). –û–±—Ä–µ–∑–∞–µ–º –¥–æ 1020...")
            caption_text = caption_text[:1020] + "..."

        # --- –£–õ–£–ß–®–ï–ù–ù–û–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –°–ê–†–ö–ê–ó–ú–ê ---
        sarcasm_data = data.get("sarcasm", {})
        comment_value = sarcasm_data.get("comment")
        if isinstance(comment_value, dict):
            sarcasm_comment = comment_value.get("–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", "").strip()
            if not sarcasm_comment: print(f"‚ö†Ô∏è –ö–ª—é—á '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç –≤ –æ–±—ä–µ–∫—Ç–µ 'sarcasm.comment' ({gen_id}).")
        elif isinstance(comment_value, str) and comment_value.strip():
            raw_comment_str = comment_value.strip()
            try:
                comment_data = json.loads(raw_comment_str)
                sarcasm_comment = comment_data.get("–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", "").strip()
                if not sarcasm_comment: print(f"‚ö†Ô∏è –ö–ª—é—á '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º JSON –ø–æ–ª—è 'sarcasm.comment' ({gen_id}).")
            except json.JSONDecodeError:
                 if raw_comment_str not in ["{}"]:
                      print(f"‚ÑπÔ∏è –ü–æ–ª–µ 'sarcasm.comment' –¥–ª—è {gen_id} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å.")
                      sarcasm_comment = raw_comment_str
                 else:
                      print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –ø–æ–ª—è 'sarcasm.comment' –¥–ª—è {gen_id}, –∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ '{{}}'. –°–∞—Ä–∫–∞–∑–º –±—É–¥–µ—Ç –ø—É—Å—Ç.")
                      sarcasm_comment = ""
            except Exception as e:
                 print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ 'sarcasm.comment' –¥–ª—è {gen_id}: {e}")
                 sarcasm_comment = ""
        else:
             print(f"‚ÑπÔ∏è –ü–æ–ª–µ 'sarcasm.comment' –ø—É—Å—Ç–æ–µ, –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø –≤ JSON –¥–ª—è {gen_id}.")
        print(f"DEBUG: –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π sarcasm_comment: '{sarcasm_comment}'")

        # --- –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
        poll_data = sarcasm_data.get("poll", {})
        poll_question = poll_data.get("question", "").strip()
        poll_options = [str(opt).strip() for opt in poll_data.get("options", []) if str(opt).strip()]
        poll_question = poll_question[:300]
        poll_options = [opt[:100] for opt in poll_options][:10]
        print(f"DEBUG: –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π poll_question: '{poll_question}'")
        print(f"DEBUG: –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ poll_options: {poll_options}")

        json_processed_successfully = True
        print(f"DEBUG: json_processed_successfully —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ True")

    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ JSON —Ñ–∞–π–ª–∞ {local_json_path}: {e}")
        os.makedirs(ERROR_DIR, exist_ok=True)
        try:
            shutil.move(local_json_path, os.path.join(ERROR_DIR, os.path.basename(local_json_path)))
            print(f"üìÅ –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π JSON {gen_id}.json –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ {ERROR_DIR}")
        except Exception as move_err:
             print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π JSON: {move_err}")
        if os.path.exists(local_png_path): os.remove(local_png_path)
        if os.path.exists(local_video_path): os.remove(local_video_path)
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ JSON {gen_id}: {e}")
        if os.path.exists(local_json_path): os.remove(local_json_path)
        if os.path.exists(local_png_path): os.remove(local_png_path)
        if os.path.exists(local_video_path): os.remove(local_video_path)
        return False

    # --- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram (–§–æ—Ç–æ + –í–∏–¥–µ–æ –æ—Ç–¥–µ–ª—å–Ω–æ) ---
    os.makedirs(PROCESSED_DIR, exist_ok=True)
    sarcasm_sent = False
    poll_sent = False
    photo_sent_status = False # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ False, —Å—Ç–∞–Ω–µ—Ç True –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
    video_sent_status = False # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ False, —Å—Ç–∞–Ω–µ—Ç True –ø—Ä–∏ —É—Å–ø–µ—Ö–µ

    # 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ë–ï–ó –ø–æ–¥–ø–∏—Å–∏
    # –≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –Ω–µ –Ω—É–∂–Ω–∞, —Ç.–∫. –º—ã –≤—ã—à–ª–∏ –±—ã —Ä–∞–Ω—å—à–µ, –µ—Å–ª–∏ –±—ã png –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª
    # if png_downloaded:
    png_file_handle = None
    try:
        print(f"‚úàÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ {gen_id}.png –ë–ï–ó –ø–æ–¥–ø–∏—Å–∏...")
        png_file_handle = open(local_png_path, "rb")
        await bot.send_photo(
            chat_id=TELEGRAM_CHAT_ID,
            photo=png_file_handle,
            read_timeout=120, connect_timeout=120, write_timeout=120
        )
        photo_sent_status = True
        print("‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –¥–ª—è {gen_id}: {e}")
        photo_sent_status = False # –û—Å—Ç–∞–≤–ª—è–µ–º False
    finally:
        if png_file_handle: png_file_handle.close()

    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –° –ø–æ–¥–ø–∏—Å—å—é (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å —É—Å–ø–µ—à–Ω–æ)
    # –≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –Ω–µ –Ω—É–∂–Ω–∞, —Ç.–∫. –º—ã –≤—ã—à–ª–∏ –±—ã —Ä–∞–Ω—å—à–µ, –µ—Å–ª–∏ –±—ã video –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª
    # if video_downloaded:
    if photo_sent_status: # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–æ—Ç–æ —É—à–ª–æ
        video_file_handle = None
        try:
            print(f"‚úàÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ {gen_id}.mp4 –° –ø–æ–¥–ø–∏—Å—å—é...")
            video_file_handle = open(local_video_path, "rb")
            await bot.send_video(
                chat_id=TELEGRAM_CHAT_ID,
                video=video_file_handle,
                caption=caption_text, # <-- –ü–æ–¥–ø–∏—Å—å –∑–¥–µ—Å—å
                parse_mode="HTML",
                supports_streaming=True,
                read_timeout=120, connect_timeout=120, write_timeout=120
            )
            video_sent_status = True
            print("‚úÖ –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –¥–ª—è {gen_id}: {e}")
            video_sent_status = False # –û—Å—Ç–∞–≤–ª—è–µ–º False
        finally:
            if video_file_handle: video_file_handle.close()
    else:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å, –≤–∏–¥–µ–æ —Ç–æ–∂–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏ —Å—á–∏—Ç–∞–µ–º –Ω–µ—É—Å–ø–µ—Ö–æ–º
        print(f"‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –¥–ª—è {gen_id} –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è, —Ç.–∫. —Ñ–æ—Ç–æ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        video_sent_status = False


    # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞—Ä–∫–∞–∑–º, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    # (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ photo_sent_status –∏ video_sent_status, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    print(f"DEBUG: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–∞—Ä–∫–∞–∑–º–∞: json_processed_successfully={json_processed_successfully}, sarcasm_comment='{sarcasm_comment}'")
    if json_processed_successfully and sarcasm_comment:
        sarcasm_text_formatted = f"üìú <i>{sarcasm_comment}</i>"
        if len(sarcasm_text_formatted) > 4096:
            print(f"‚ö†Ô∏è –¢–µ–∫—Å—Ç —Å–∞—Ä–∫–∞–∑–º–∞ –¥–ª—è {gen_id} —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –û–±—Ä–µ–∑–∞–µ–º...")
            sarcasm_text_formatted = sarcasm_text_formatted[:4090] + "..."
        try:
            print(f"‚úàÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞—Ä–∫–∞–∑–º –¥–ª—è {gen_id}...")
            await bot.send_message(
                chat_id=TELEGRAM_CHAT_ID,
                text=sarcasm_text_formatted,
                parse_mode="HTML"
            )
            sarcasm_sent = True
            print(f"‚úÖ –°–∞—Ä–∫–∞–∑–º –¥–ª—è {gen_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–∞—Ä–∫–∞–∑–º–∞ –¥–ª—è {gen_id}: {e}")
    elif json_processed_successfully and not sarcasm_comment:
        print("DEBUG: –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∞—Ä–∫–∞–∑–º–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (sarcasm_comment –ø—É—Å—Ç).")
    elif not json_processed_successfully:
        print("DEBUG: –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∞—Ä–∫–∞–∑–º–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (json_processed_successfully is False).")

    # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –æ–Ω –≤–∞–ª–∏–¥–µ–Ω
    # (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ photo_sent_status –∏ video_sent_status, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    print(f"DEBUG: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –æ–ø—Ä–æ—Å–∞: json_processed_successfully={json_processed_successfully}, poll_question='{poll_question}', len(poll_options)={len(poll_options)}")
    if json_processed_successfully and poll_question and len(poll_options) >= 2:
        poll_question_formatted = f"üé≠ {poll_question}"
        try:
            print(f"‚úàÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø—Ä–æ—Å –¥–ª—è {gen_id}...")
            await bot.send_poll(
                chat_id=TELEGRAM_CHAT_ID,
                question=poll_question_formatted,
                options=poll_options,
                is_anonymous=True
            )
            poll_sent = True
            print(f"‚úÖ –û–ø—Ä–æ—Å –¥–ª—è {gen_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–ø—Ä–æ—Å–∞ –¥–ª—è {gen_id}: {e}")
    elif json_processed_successfully:
         if not poll_question:
              print("DEBUG: –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø—Ä–æ—Å–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (poll_question –ø—É—Å—Ç).")
         elif len(poll_options) < 2:
              print(f"DEBUG: –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø—Ä–æ—Å–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (–æ–ø—Ü–∏–π: {len(poll_options)} < 2).")
    elif not json_processed_successfully:
         print("DEBUG: –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø—Ä–æ—Å–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (json_processed_successfully is False).")

    # --- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ ---
    # –£—Å–ø–µ—Ö –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∫–æ–π –í–°–ï–• –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ –ò –≤–∏–¥–µ–æ)
    success = photo_sent_status and video_sent_status

    if success:
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–º–µ–¥–∏–∞) –¥–ª—è {gen_id}.")
        published_ids.add(gen_id)
        save_published_ids(published_ids)

        files_to_move = [local_png_path, local_video_path, local_json_path]
        for file_path in files_to_move:
            if os.path.exists(file_path):
                try:
                    destination_path = os.path.join(PROCESSED_DIR, os.path.basename(file_path))
                    shutil.move(file_path, destination_path)
                    print(f"  üìÅ –§–∞–π–ª {os.path.basename(file_path)} –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ {PROCESSED_DIR}")
                except Exception as e:
                    print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª {os.path.basename(file_path)} –≤ processed: {e}")
    else:
        # –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ–¥–∏–∞ –Ω–µ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã (–∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∏–ª–∏ –Ω–µ–ø–æ–ª–Ω–æ–π –≥—Ä—É–ø–ø—ã)
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º —É–∂–µ –±—ã–ª–æ –≤—ã–≤–µ–¥–µ–Ω–æ –≤—ã—à–µ (–ª–∏–±–æ "–ì—Ä—É–ø–ø–∞ –Ω–µ–ø–æ–ª–Ω–∞—è", –ª–∏–±–æ "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ...")
        if json_processed_successfully: # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–µ–π, –µ—Å–ª–∏ JSON –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω
             print(f"‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è {gen_id} –ù–ï –£–î–ê–õ–ê–°–¨. ID –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ.")
             print(f"   (–°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏: –§–æ—Ç–æ - {photo_sent_status}, –í–∏–¥–µ–æ - {video_sent_status}, –°–∞—Ä–∫–∞–∑–º - {'–î–∞' if sarcasm_sent else '–ù–µ—Ç'}, –û–ø—Ä–æ—Å - {'–î–∞' if poll_sent else '–ù–µ—Ç'})")
             print(f"   üóëÔ∏è –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è {gen_id}, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —Å–ª–µ–¥. –∑–∞–ø—É—Å–∫–µ.")

        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã (JSON, PNG, Video), –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è –≤ download
        files_to_delete = [local_png_path, local_video_path, local_json_path]
        for file_path in files_to_delete:
             if os.path.exists(file_path) and PROCESSED_DIR not in os.path.dirname(file_path) and ERROR_DIR not in os.path.dirname(file_path):
                  try:
                       os.remove(file_path)
                  except Exception as e:
                       print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª {file_path}: {e}")

    return success

# ------------------------------------------------------------
# 5) –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ (–ø–æ–∏—Å–∫ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è)
# ------------------------------------------------------------
async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞.
    """
    print("\n" + "="*50)
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ B2 -> Telegram (v6: –ü—Ä–æ–ø—É—Å–∫ –Ω–µ–ø–æ–ª–Ω—ã—Ö –≥—Ä—É–ø–ø)") # <-- –û–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ
    print("="*50)

    print("üßπ –û—á–∏—â–∞–µ–º/—Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
    shutil.rmtree(DOWNLOAD_DIR, ignore_errors=True)
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)
    os.makedirs(PROCESSED_DIR, exist_ok=True)
    os.makedirs(ERROR_DIR, exist_ok=True)
    print(f"‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏ –≥–æ—Ç–æ–≤—ã.")

    published_ids = load_published_ids()

    folders_to_scan = ["444/", "555/", "666/"]
    print(f"üìÇ –ü–∞–ø–∫–∏ –≤ –±–∞–∫–µ—Ç–µ '{S3_BUCKET_NAME}' –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {', '.join(folders_to_scan)}")

    unpublished_items: List[Tuple[str, str]] = []

    for folder in folders_to_scan:
        print(f"\nüîé –°–∫–∞–Ω–∏—Ä—É–µ–º –ø–∞–ø–∫—É: {folder}")
        try:
            ls_result = bucket.ls(folder_to_list=folder, recursive=False)
            gen_ids_in_folder = set()
            for file_version, _folder_name in ls_result:
                file_name = file_version.file_name
                if file_name.startswith(folder) and file_name.endswith(".json"):
                     if os.path.dirname(file_name.replace(folder, '', 1)) == '':
                         base_name = os.path.basename(file_name)
                         gen_id = os.path.splitext(base_name)[0]
                         if re.fullmatch(r"\d{8}-\d{4}", gen_id):
                              gen_ids_in_folder.add(gen_id)
                         else:
                              print(f"   ‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∏–º–µ–Ω–µ–º ID: {file_name}")

            print(f"   ‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω–æ {len(gen_ids_in_folder)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID —Ñ–æ—Ä–º–∞—Ç–∞ YYYYMMDD-HHMM –≤ {folder}")

            new_ids = gen_ids_in_folder - published_ids
            if new_ids:
                print(f"   ‚ú® –ù–∞–π–¥–µ–Ω–æ {len(new_ids)} –Ω–æ–≤—ã—Ö (–Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö) ID –≤ {folder}.")
                for gen_id in new_ids:
                    unpublished_items.append((gen_id, folder))
            else:
                print(f"   ‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö ID –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ {folder}.")

        except B2Error as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ B2 SDK –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞–ø–∫–∏ {folder}: {e}")
        except Exception as e:
            print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞–ø–∫–∏ {folder}: {e}")

    if unpublished_items:
        print(f"\n‚è≥ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ {len(unpublished_items)} –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")
        unpublished_items.sort(key=lambda item: item[0])
        print("   üî¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏ (gen_id)...")

        gen_id_to_publish, folder_to_publish = unpublished_items[0]

        print(f"\nüéØ –í—ã–±—Ä–∞–Ω–∞ —Å–∞–º–∞—è —Å—Ç–∞—Ä–∞—è –≥—Ä—É–ø–ø–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ID={gen_id_to_publish} –∏–∑ –ø–∞–ø–∫–∏ {folder_to_publish}")
        print("-" * 50)

        success = await publish_generation_id(gen_id_to_publish, folder_to_publish, published_ids)

        print("-" * 50)
        if success:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≥—Ä—É–ø–ø–∞ {gen_id_to_publish}.")
        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏—á–∏–Ω–µ –Ω–µ—É–¥–∞—á–∏ (–Ω–µ–ø–æ–ª–Ω–∞—è –≥—Ä—É–ø–ø–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏) –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ publish_generation_id
            print(f"‚ÑπÔ∏è –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≥—Ä—É–ø–ø—ã {gen_id_to_publish} –Ω–µ –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ (–ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤—ã—à–µ).")

    else:
        print("\nüéâ –ù–µ—Ç –Ω–æ–≤—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–æ –≤—Å–µ—Ö –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö.")

    print("\nüèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")
    print("="*50 + "\n")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except RuntimeError as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    except Exception as e:
         print(f"\nüí• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

