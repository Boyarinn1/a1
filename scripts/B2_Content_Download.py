import os
import json
import b2sdk.v2
from telegram import Bot
from telegram.error import TelegramError

# üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
BASE_DIR = os.path.dirname(os.path.dirname(__file__))  # a1/
DOWNLOAD_DIR = os.path.join(BASE_DIR, "data", "downloaded")  # a1/data/downloaded
CONFIG_PATH = os.path.join(BASE_DIR, "config", "config_public.json")  # a1/config/config_public.json

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
S3_KEY_ID = os.getenv("S3_KEY_ID")
S3_APPLICATION_KEY = os.getenv("S3_APPLICATION_KEY")
S3_BUCKET_NAME = os.getenv("S3_BUCKET_NAME")
S3_ENDPOINT = os.getenv("S3_ENDPOINT", "production")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not all([S3_KEY_ID, S3_APPLICATION_KEY, S3_BUCKET_NAME, TELEGRAM_TOKEN, TELEGRAM_CHAT_ID]):
    raise RuntimeError("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

# üîπ Telegram Bot
bot = Bot(token=TELEGRAM_TOKEN)

# üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ B2
info = b2sdk.v2.InMemoryAccountInfo()
b2_api = b2sdk.v2.B2Api(info)
b2_api.authorize_account(S3_ENDPOINT, S3_KEY_ID, S3_APPLICATION_KEY)

# üîπ –ü–æ–ª—É—á–∞–µ–º bucket
bucket = b2_api.get_bucket_by_name(S3_BUCKET_NAME)

# üîπ –ü–æ–∏—Å–∫ JSON-—Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ 444/
files_to_download = []
print("üì• –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –≤ B2 (–ø–∞–ø–∫–∞ 444/)...")
for file_version, _ in bucket.ls("444/", recursive=True):
    if file_version.file_name.endswith(".json"):  # –ò—â–µ–º —Ç–æ–ª—å–∫–æ JSON-—Ñ–∞–π–ª—ã
        files_to_download.append(file_version.file_name)

if not files_to_download:
    print("‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏. –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    with open(CONFIG_PATH, "w", encoding="utf-8") as f:
        json.dump({"status": "waiting", "files": []}, f, indent=4)
    exit(0)

# üîπ –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs(DOWNLOAD_DIR, exist_ok=True)

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
for file_name in files_to_download:
    local_path = os.path.join(DOWNLOAD_DIR, os.path.basename(file_name))
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        print(f"üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ {file_name} –≤ {local_path}...")
        bucket.download_file_by_name(file_name).save_to(local_path)

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º JSON-—Ñ–∞–π–ª—ã
        with open(local_path, "r", encoding="utf-8") as f:
            data = json.load(f)

        # üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞ 'topik' –∏–ª–∏ 'topic'
        topic_text = None
        if "topik" in data:
            topic_text = data["topik"]
        elif "topic" in data and isinstance(data["topic"], dict) and "topic" in data["topic"]:
            topic_text = data["topic"]["topic"]

        # üîπ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        if topic_text:
            message = f"**–¢–æ–ø–∏–∫:** {topic_text}\n\n{data.get('content', '–ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}"
        else:
            message = f"üìú JSON-—Ñ–∞–π–ª –±–µ–∑ –∫–ª—é—á–∞ 'topik' –∏–ª–∏ 'topic':\n```\n{json.dumps(data, indent=4, ensure_ascii=False)}\n```"

        try:
            bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message, parse_mode="Markdown")
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {file_name}")
        except TelegramError as e:
            print(f"üö® –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

        os.remove(local_path)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    except Exception as e:
        print(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {file_name}: {e}")

# üîπ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
print("üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.")
