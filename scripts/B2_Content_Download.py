import os
import json
import b2sdk.v2
import asyncio
import shutil
from telegram import Bot
from telegram.error import TelegramError

# üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
BASE_DIR = os.path.dirname(os.path.dirname(__file__))  # a1/
DOWNLOAD_DIR = os.path.join(BASE_DIR, "data", "downloaded")  # a1/data/downloaded
CONFIG_PATH = os.path.join(BASE_DIR, "config", "config_public.json")  # a1/config/config_public.json

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
S3_KEY_ID = os.getenv("S3_KEY_ID")
S3_APPLICATION_KEY = os.getenv("S3_APPLICATION_KEY")
S3_BUCKET_NAME = os.getenv("S3_BUCKET_NAME")
S3_ENDPOINT = os.getenv("S3_ENDPOINT", "production")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not all([S3_KEY_ID, S3_APPLICATION_KEY, S3_BUCKET_NAME, TELEGRAM_TOKEN, TELEGRAM_CHAT_ID]):
    raise RuntimeError("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

# üîπ Telegram Bot
bot = Bot(token=TELEGRAM_TOKEN)

# üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ B2
info = b2sdk.v2.InMemoryAccountInfo()
b2_api = b2sdk.v2.B2Api(info)
b2_api.authorize_account(S3_ENDPOINT, S3_KEY_ID, S3_APPLICATION_KEY)

# üîπ –ü–æ–ª—É—á–∞–µ–º bucket
bucket = b2_api.get_bucket_by_name(S3_BUCKET_NAME)


async def process_files():
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ JSON-—Ñ–∞–π–ª–æ–≤ –≤ Telegram"""

    # üîç –û—Ç–ª–∞–¥–∫–∞: –æ—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
    print("üóë –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏ –ø–µ—Ä–µ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º...")
    shutil.rmtree(DOWNLOAD_DIR, ignore_errors=True)
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)

    # üîç –ü–æ–ª–Ω—ã–π –ª–∏—Å—Ç–∏–Ω–≥ –ø–∞–ø–æ–∫ –≤ B2
    for folder in ["444/", "555/", "666/"]:
        print(f"\nüìÅ –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ {folder}:")
        for file_version, _ in bucket.ls(folder, recursive=True):
            print(f"  üîπ {file_version.file_name}")

    # üîç –û—Ç–ª–∞–¥–∫–∞: –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ B2 (—Ç–æ–ª—å–∫–æ –∏–∑ 444/)
    print("\nüì• –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ B2 (–ø–∞–ø–∫–∞ 444/)...")
    files_to_download = []
    for file_version, _ in bucket.ls("444/", recursive=True):
        files_to_download.append(file_version.file_name)

    print(f"üìå –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –≤ B2: {len(files_to_download)}")
    for file_name in files_to_download:
        print(f"  üîπ {file_name}")

    if not files_to_download:
        print("‚ö†Ô∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏. –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        with open(CONFIG_PATH, "w", encoding="utf-8") as f:
            json.dump({"status": "waiting", "files": []}, f, indent=4)
        return

    for file_name in files_to_download:
        local_path = os.path.join(DOWNLOAD_DIR, os.path.basename(file_name))

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ JSON-—Ñ–∞–π–ª—ã
        if not file_name.endswith(".json"):
            print(f"‚è≠ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª {file_name} (–Ω–µ JSON)")
            continue

        try:
            # üîç –û—Ç–ª–∞–¥–∫–∞: —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            print(f"üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ {file_name} –≤ {local_path}...")
            bucket.download_file_by_name(file_name).save_to(local_path)

            # üîç –û—Ç–ª–∞–¥–∫–∞: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
            with open(local_path, "r", encoding="utf-8") as f:
                data = f.read()

            print(f"üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ({file_name}): {type(data)}")
            print(f"üîç –ü–µ—Ä–≤—ã–µ 300 —Å–∏–º–≤–æ–ª–æ–≤ —Ñ–∞–π–ª–∞: {data[:300]}")

            # üîç –ï—Å–ª–∏ JSON –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω –≤ —Å—Ç—Ä–æ–∫–µ, –ø—Ä–æ–±—É–µ–º –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –¥–≤–∞–∂–¥—ã
            try:
                if isinstance(data, str):
                    data = json.loads(data)
                if isinstance(data, str):
                    data = json.loads(data)
            except json.JSONDecodeError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON –≤ {file_name}: {e}")
                continue

            # üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ data ‚Äî —Å–ª–æ–≤–∞—Ä—å
            if not isinstance(data, dict):
                print(f"üö® –û—à–∏–±–∫–∞: JSON –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ! –ü–æ–ª–Ω—ã–π JSON:\n{data}")
                continue

            # üîπ –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            topic = data.get("topic", {}).get("topic", "–ë–µ–∑ —Ç–µ–º—ã")
            text_content = data.get("text_initial", {}).get("content", "–ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
            critique = data.get("critique", {}).get("critique", "")
            sarcasm = data.get("sarcasm", {}).get("comment", "")
            poll = data.get("sarcasm", {}).get("poll", "")

            # üîπ –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —à–∞–±–ª–æ–Ω—É
            message = f"üìú **–ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON:**\n```\n{json.dumps(data, indent=4, ensure_ascii=False)}\n```"

            if critique:
                message += f"\n\nüí° **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–æ—Ä**\n{critique}"

            if sarcasm:
                message += f"\n\nüì¢ **–°–∞—Ä–∫–∞–∑–º**\n{sarcasm}"

            if poll:
                message += f"\n\nüìä **–û–ø—Ä–æ—Å**\n{poll}"

            # üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
            try:
                await bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message, parse_mode="Markdown")
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {file_name}")
            except TelegramError as e:
                print(f"üö® –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

            # üîç –û—Ç–ª–∞–¥–∫–∞: —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            os.remove(local_path)
            print(f"üóë –§–∞–π–ª {file_name} —É–¥–∞–ª—ë–Ω –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.")

        except Exception as e:
            print(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {file_name}: {e}")

    print("üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.")


# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
if __name__ == "__main__":
    asyncio.run(process_files())
