import os
import subprocess
from b2sdk.v2 import B2Api, InMemoryAccountInfo

# üîÑ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ B2
info = InMemoryAccountInfo()
b2_api = B2Api(info)

S3_KEY_ID = os.getenv("S3_KEY_ID")
S3_APPLICATION_KEY = os.getenv("S3_APPLICATION_KEY")
S3_BUCKET_NAME = os.getenv("S3_BUCKET_NAME")
GH_TOKEN = os.getenv("GH_TOKEN")

GH_TOKEN = os.getenv("GH_TOKEN")
if GH_TOKEN:
    os.environ["GH_TOKEN"] = GH_TOKEN
    print("‚úÖ GH_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
else:
    print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: GH_TOKEN –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω! GitHub CLI –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å.")


print("üîÑ module1_preparation.py –∑–∞–ø—É—â–µ–Ω!")

if not GH_TOKEN:
    print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: GH_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –Ω–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
else:
    os.environ["GH_TOKEN"] = GH_TOKEN

if not S3_KEY_ID or not S3_APPLICATION_KEY or not S3_BUCKET_NAME:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è S3_KEY_ID, S3_APPLICATION_KEY –∏–ª–∏ S3_BUCKET_NAME –Ω–µ –∑–∞–¥–∞–Ω—ã!")

try:
    b2_api.authorize_account("production", S3_KEY_ID, S3_APPLICATION_KEY)
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ B2 —É—Å–ø–µ—à–Ω–∞!")
except Exception as e:
    raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ B2: {e}")

# üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ bucket'–∞
try:
    bucket = b2_api.get_bucket_by_name(S3_BUCKET_NAME)
except Exception as e:
    raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ bucket'–∞ {S3_BUCKET_NAME}: {e}")

# ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –ø—É—Ç—å, —á—Ç–æ –∏ –≤ `module2_publication.py`
BASE_DIR = os.path.dirname(os.path.dirname(__file__))
DOWNLOAD_DIR = os.path.join(BASE_DIR, "data", "downloaded")

if not os.path.exists(DOWNLOAD_DIR):
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)


def clear_old_files():
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏ —Ä–∞–±–æ—á–µ–π –ø–∞–ø–∫–∏."""
    print(f"üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ {DOWNLOAD_DIR}...")
    for file in os.listdir(DOWNLOAD_DIR):
        file_path = os.path.join(DOWNLOAD_DIR, file)
        os.remove(file_path)
    print("‚úÖ –ü–∞–ø–∫–∞ –æ—á–∏—â–µ–Ω–∞.")

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏–∑ GitHub Actions
    print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏–∑ GitHub...")
    subprocess.run(["gh", "run", "delete", "downloaded_files"], check=False)
    print("‚úÖ –°—Ç–∞—Ä—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —É–¥–∞–ª–µ–Ω—ã.")


def restore_files_from_artifacts():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É."""
    print("üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤...")
    subprocess.run(["gh", "run", "download", "--name", "downloaded_files", "--dir", DOWNLOAD_DIR], check=False)
    print(f"‚úÖ –§–∞–π–ª—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ {DOWNLOAD_DIR}")


def download_new_files():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–æ–≤—É—é –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É —Ñ–∞–π–ª–æ–≤ –∏–∑ B2."""
    print("üì• –ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ B2...")
    json_file = None
    mp4_file = None

    for file_version, _ in bucket.ls("444/", recursive=True):
        file_name = file_version.file_name  # ‚úÖ –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ FileVersion
        if file_name.endswith(".json"):
            json_file = file_name
            mp4_file = file_name.replace(".json", ".mp4")
            break

    if not json_file or not mp4_file:
        print("‚ö†Ô∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏!")
        return

    print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º {json_file} –∏ {mp4_file}...")
    for file_name in [json_file, mp4_file]:
        local_path = os.path.join(DOWNLOAD_DIR, os.path.basename(file_name))
        try:
            with open(local_path, "wb") as f:
                bucket.download_file_by_name(file_name).save(f)
            print(f"‚úÖ {file_name} –∑–∞–≥—Ä—É–∂–µ–Ω –≤ {local_path}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {file_name}: {e}")


if __name__ == "__main__":
    clear_old_files()  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≥—Ä—É–ø–ø—É
    restore_files_from_artifacts()  # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    download_new_files()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏–∑ B2
